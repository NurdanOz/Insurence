@model Insurence.Models.DataModels.TblTestimonial

@{
    ViewBag.Title = "Müşteri Yorumu Düzenle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h4 class="card-title mb-0">Müşteri Yorumu Düzenle</h4>
                    <a href="@Url.Action("Index", "Testimonial")" class="btn btn-gradient-dark btn-fw">
                        <i class="mdi mdi-arrow-left"></i> Geri Dön
                    </a>
                </div>

                @using (Html.BeginForm("Edit", "Testimonial", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.TestimoniaLId)
                    @Html.HiddenFor(m => m.ImageUrl)

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="NameSurname">Ad Soyad *</label>
                                @Html.TextBoxFor(m => m.NameSurname, new { @class = "form-control", placeholder = "Örn: Ayşe Yılmaz" })
                                @Html.ValidationMessageFor(m => m.NameSurname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Profession">Meslek *</label>
                                @Html.TextBoxFor(m => m.Profession, new { @class = "form-control", placeholder = "Örn: İç Mimar" })
                                @Html.ValidationMessageFor(m => m.Profession, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Text">Yorum Metni (Türkçe) *</label>
                        @Html.TextAreaFor(m => m.Text, new { @class = "form-control", rows = "4", placeholder = "Müşteri yorumunu giriniz..." })
                        @Html.ValidationMessageFor(m => m.Text, "", new { @class = "text-danger" })
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Rating">Puan (1-5 Yıldız) *</label>
                                @Html.DropDownListFor(m => m.Rating, new SelectList(new[] {
                                    new { Value = 1, Text = "1 Yıldız" },
                                    new { Value = 2, Text = "2 Yıldız" },
                                    new { Value = 3, Text = "3 Yıldız" },
                                    new { Value = 4, Text = "4 Yıldız" },
                                    new { Value = 5, Text = "5 Yıldız" }
                                }, "Value", "Text", Model.Rating), "Puan seçiniz...", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Rating, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="ProfessionEN">Meslek (İngilizce)</label>
                                @Html.TextBoxFor(m => m.ProfessionEN, new { @class = "form-control", placeholder = "Ex: Interior Architect" })
                                @Html.ValidationMessageFor(m => m.ProfessionEN, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="DescriptionEN">Yorum Metni (İngilizce)</label>
                        @Html.TextAreaFor(m => m.DescriptionEN, new { @class = "form-control", rows = "4", placeholder = "Enter testimonial text..." })
                        @Html.ValidationMessageFor(m => m.DescriptionEN, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Mevcut Fotoğraf</label><br />
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" alt="@Model.NameSurname" style="max-width: 200px; max-height: 200px; border-radius: 8px; margin-bottom: 10px;" />
                        }
                        else
                        {
                            <p class="text-muted">Fotoğraf yüklenmemiş</p>
                        }
                    </div>

                    <div class="form-group">
                        <label>Yeni Fotoğraf Yükle (İsteğe Bağlı)</label>
                        <div class="custom-file">
                            <input type="file" name="ImageFile" id="ImageFile" class="custom-file-input" accept="image/*" onchange="previewImage(event)" />
                            <label class="custom-file-label" for="ImageFile">Dosya Seçin...</label>
                        </div>
                        <small class="form-text text-muted">Sadece JPG, JPEG, PNG formatları kabul edilir. Boş bırakırsanız mevcut fotoğraf korunur.</small>
                    </div>

                    <div class="form-group">
                        <img id="imagePreview" src="#" alt="Önizleme" style="max-width: 200px; max-height: 200px; display: none; border-radius: 8px; margin-top: 10px;" />
                    </div>

                    <div class="form-group mt-4">
                        <button type="submit" class="btn btn-gradient-success mr-2">
                            <i class="mdi mdi-check"></i> Güncelle
                        </button>
                        <a href="@Url.Action("Index", "Testimonial")" class="btn btn-light">İptal</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('.custom-file-input').on('change', function () {
            var fileName = $(this).val().split('\\').pop();
            $(this).next('.custom-file-label').html(fileName);
        });

        function previewImage(event) {
            var reader = new FileReader();
            reader.onload = function () {
                var output = document.getElementById('imagePreview');
                output.src = reader.result;
                output.style.display = 'block';
            };
            reader.readAsDataURL(event.target.files[0]);
        }
    </script>
}

